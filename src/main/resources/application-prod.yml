server:
#  http2:
#    enabled: true
#  ssl:
#    enabled: true
#    key-store: keystore.p12
#    key-store-password: 1q2w3e4r12!
#    key-store-type: PKCS12
#    key-alias: spring
#  tomcat:
#    uri-encoding: UTF-8
#  port: 443
  port: 8080
  servlet:
    encoding:
      charset: utf-8
      force: true

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${mail_username}
    password: ${app_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  cache:
    type: redis
  redis:
    host: redis
    port: 6379
  datasource:
    url: jdbc:mariadb://${rds_hostname}:${rds_port}/${rds_db_name}?allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${rds_username}
    password: ${rds_password}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      default_batch_fetch_size: 100
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        hbm2ddl.charset_name: UTF-8
  # hibernateLazyInitializer 오류 해결법
  jackson:
    serialization:
      fail-on-empty-beans: false
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 10MB
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

# aws 설정
# 사용할 S3 bucket region 입력
cloud:
  aws:
    credentials:
      access-key: ${s3_access_key}
      secret-key: ${s3_secret_key}
    s3:
      bucket: ${s3_bucket}
      delete-dir: https://${s3_bucket}.s3.${s3_region_static}.amazonaws.com/
    region:
      static: ${s3_region_static} # 리전 정보(서울)
    stack:
      auto: false

logging:
  level:
    '[shop.mtcoding.restend]': INFO # DEBUG 레벨부터 에러 확인할 수 있게 설정하기

file:
  path: ./upload/ # UPLOAD 폴더 상대경로 / AWS에 S3 사용하는게 좋음

sentry:
  dsn: {sentry.dsn}
  traces-sample-rate: 1.0
